##
# Nginx Configuration File
# 
# This file is a starting point for configuring your Nginx server. It includes
# a basic setup for serving static content and proxying requests to an application
# server. For more detailed information, refer to the following resources:
# - http://wiki.nginx.org/Pitfalls
# - http://wiki.nginx.org/QuickStart
# - http://wiki.nginx.org/Configuration
#
# You may want to move this file to a different location and start with a clean
# configuration file for your specific needs. Keep this file as a reference or
# disable it in the `sites-enabled` directory.
#
# For more examples, see: /usr/share/doc/nginx-doc/examples/
##

# Default server configuration
server {
    # Listen on port 80 for IPv4 and IPv6
    listen 80 default_server;
    listen [::]:80 default_server;

    # Root directory for serving static files
    root /var/www/html;

    # Default index files
    index index.html index.htm index.nginx-debian.html;

    # Server name
    server_name _;

    # Add a custom header to responses
    add_header X-Served-By "$HOSTNAME";

    # Permanent redirect for /redirect_me to a specific URL
    rewrite ^/redirect_me https://www.youtube.com/watch?v=QH2-TGUlwu4 permanent;

    # Custom 404 error page
    error_page 404 /custom_404.html;

    # Location block for proxying requests to the Flask application
    location /airbnb-onepage {
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Location block for serving static files from a specific directory
    location /hbnb_static {
        alias /data/web_static/current/;
        autoindex off;
    }

    # Default location block for handling requests
    location / {
        try_files $uri $uri/ =404;
    }

    # SSL Configuration (commented out for now)
    #
    # To enable SSL, uncomment the following lines and configure SSL certificates:
    #
    # listen 443 ssl default_server;
    # listen [::]:443 ssl default_server;
    #
    # You may also want to disable gzip for SSL traffic due to potential security issues.
    # See: https://bugs.debian.org/773332
    #
    # Self-signed certificates generated by the ssl-cert package can be included here.
    # However, do not use them on a production server!
    #
    # include snippets/snakeoil.conf;

    # Example PHP-FastCGI configuration (commented out for now)
    #
    # To serve PHP files, uncomment and configure the following lines:
    #
    # location ~ \.php$ {
    #     include snippets/fastcgi-php.conf;
    #     fastcgi_pass 127.0.0.1:9000;
    #     # Use the following line if php-fpm is used:
    #     # fastcgi_pass unix:/run/php/php7.0-fpm.sock;
    # }

    # Deny access to .htaccess files (if applicable)
    #
    # Apache-style .htaccess files should be denied access when using Nginx:
    #
    # location ~ /\.ht {
    #     deny all;
    # }
}

# Virtual Host configuration for another domain (example.com)
#
# You can move this configuration to a separate file under `sites-available/`
# and enable it by creating a symlink in `sites-enabled/`.
#
# server {
#     listen 80;
#     listen [::]:80;
#
#     server_name example.com;
#
#     root /var/www/example.com;
#     index index.html;
#
#     location / {
#         try_files $uri $uri/ =404;
#     }
# }
